\documentclass{beamer}
\usetheme{metropolis}
\usepackage[utf8]{inputenc}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}


\newcommand\Fontvi{\fontsize{6}{7.2}\selectfont}

\title{Modelling amyloidogenic scaffolds of biofilms}
\date{}
\author{Micha\l{} Burdukiewicz}
\institute{University of Wroc\l{}aw, Department of Genomics}

\begin{document}

  <<knitrIntro, echo = FALSE, message=FALSE,warning=FALSE>>=
source("my_ggplot_theme.R")

library(dplyr)
library(reshape2)
library(xtable)
library(biogram)

group2df <- function(group_list, caption = NULL, label = NULL) {
  tab <- data.frame(Groups = sapply(group_list, function(i)
    paste0(toupper(sort(i)), collapse = ", ")))
  tab <- cbind(ID = 1L:nrow(tab), tab)
  rws <- seq(1, nrow(tab) - 1, by = 2)
  col <- rep("\\rowcolor[gray]{0.85}", length(rws))
  colnames(tab) <- c("Subgroup ID", "Amino acids")
  res <- print(xtable(tab, caption = caption, label = label), 
               include.rownames = FALSE, booktabs = TRUE,
               add.to.row = list(pos = as.list(rws), command = col), print.results = FALSE, 
               caption.placement = "top", sanitize.text.function = identity, 
               sanitize.rownames.function = identity)
  #res
  print(xtable(tab))
}  
  
amyloids_plot <- read.csv("amyloid_plot_data.csv")

levels(amyloids_plot[["et"]]) <- c("Best-performing reduced alphabet", 
                                   "Reduced alphabet", "Full alphabet", 
                                   "Standard reduced alphabet")


amyloids_plot[["len_range"]] <- factor(amyloids_plot[["len_range"]], 
                                       levels = c("Test peptide length: 6 ", "Test peptide length: 7-10", 
                                                  "Test peptide length: 11-15", "Test peptide length: 16-25"))

subdat <- filter(amyloids_plot, pos == "Training peptide length: 6")

best_enc <- list(c("G"), 
                 c("K", "P", "R"),
                 c("I", "L", "V"),
                 c("F", "W", "Y"),
                 c("A", "C", "H", "M"),
                 c("D", "E", "N", "Q", "S", "T"))
names(best_enc) <- 1L:6


@
  

  \maketitle
  \section{The role of amyloids in biofilm formation}
  
\begin{frame}{} 

Curli fibers:
\begin{itemize}
\item involved in adhesion to surfaces, cell aggregation, and biofilm formation.
\item formed by highly aggregative structural subunits, e.g, curlin (CsgA).
\end{itemize}
\end{frame}   
  
\begin{frame}{}
CsgA fibre formation through self-assembly (amyloidogenic aggregation).
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/csga_csgc1.jpg}
\end{figure}

\footnotesize Scale bar $= 200$nm. \citet{taylor_electrostatically-guided_2016}.
\end{frame}  
  
\begin{frame}{}
A similar aggregation mechanism is demonstrated by proteins associated with various neurodegenerative disorders (e.g., Alzheimer's, Parkinson's, Creutzfeldta-Jakob's diseases).
    
\begin{figure} 
\includegraphics[width=0.7\textwidth]{static_figure/amyloid_aggregates.jpg}
\end{figure}

\footnotesize
$\beta$-amyloid aggregates (red) around neurons (green). Strittmatter Laboratory, Yale University.

\end{frame}
  

  
  \begin{frame}{}
  
  The aggregation of amyloids is initiated by 6- to 15-residue segments called hot spots, diverse subsequences that form unique zipper-like $\beta$-structures.
\begin{figure} 
\includegraphics[width=0.9\textwidth]{static_figure/zipper_structure.jpg}
\end{figure}

\footnotesize\citet{sawaya_atomic_2007}
\end{frame}
  
  

\begin{frame}{}
CsgC was reported to effectively (molar ratios as low as 1:500) inhibit CsgA aggregation. \textit{In vivo}, it prevents CsgA from aggregating within the periplasm~\citep{evans_bacterial_2015}.

\end{frame}  

\begin{frame}{}


\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/csga_csgc2.jpg}
\end{figure}

A. CsgA fibre formation. B. CsgA+CsgC 200:1 (molar ratio) fibre formation.

\footnotesize Scale bar $= 200$nm. \citet{taylor_electrostatically-guided_2016}.
\end{frame}

\section{Amyloidogenic motifs}

\begin{frame}
  Which motifs (countinous or gapped subsequences of amino acids) are associated with amyloidogenicity?
  
Can we build a predictor of amyloidogenicity using these motifs?
  \end{frame}


    \begin{frame}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram1.eps}
\end{figure}
  \end{frame}
  
\begin{frame}{QuiPT}  
  
  \textbf{Qui}ck \textbf{P}ermutation \textbf{T}est is a fast alternative to permutation tests for motifs. It also allows precise estimation of p-value.

QuiPT is avaible as part of the \textbf{biogram} R package.
\end{frame}
  


\begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 5, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et == "Full alphabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()

@

Full alphabet: 20 standard amino acids.

Area Under the Curve (AUC): a performance measure between 0 (completely wrong predictions) and 1 (completely right predictions).


\end{frame}

\section{Reduced amino acid alphabets}
  
\begin{frame}
  Does amyloidogenicity depend on the exact sequence of amino acids?
  \end{frame}

\begin{frame}{Standard reduced amino acid alphabets}
To date, several reduced amino acid alphabets have been proposed, which have been applied to (among others) protein folding and protein structure prediction~\citep{kosiol_new_2004, melo_accuracy_2006}.
  \end{frame}
  
    \begin{frame}{Standard reduced amino acid alphabets}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram2.eps}
\end{figure}


  \end{frame}


    \begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 5, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et %in% c("Full alphabet", "Standard reduced alphabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3L:4], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3L:4], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()

@

Standard reduced amino acid alphabets do not enhance discrimination between amyloidogenic and non-amyloidogenic proteins.
  
  \end{frame}


\begin{frame}{Novel reduced amino acid alphabets}

\begin{itemize}
\item 17 measures handpicked from AAIndex database: 
  \begin{itemize}
    \item size of residues, 
    \item hydrophobicity, 
    \item solvent surface area, 
    \item frequency in $\beta$-sheets,
    \item contactivity.
  \end{itemize}
  \item 524 284 amino acid reduced alphabets with different level of amino acid alphabet reduction (three to six amino acid groups).
  \end{itemize}

    \end{frame}
  
    \begin{frame}{Novel reduced amino acid alphabets}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram3.eps}
\end{figure}
  \end{frame}


\begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
subdat2 <- droplevels(filter(subdat, et != "Best-performing reduced alphabet"))

ggplot(subdat2, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 5, color = "black", fill = "white") +
  geom_point(data = filter(subdat2, et %in% c("Full alphabet", "Standard reduced alphabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[2L:4], drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[2L:4], drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()

@
  \tiny
Hinges of boxes correspond to 
the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
gray circles correspond to the reduced alphabets with the AUC outside the 0.95 
confidence interval.
  \end{frame}


    \begin{frame}{The best-perfoming reduced alphabet}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 5) +
  geom_point(data = filter(subdat, et != "Reduced alphabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()
@

\end{frame}


\section{Knowledge-discovery}

\begin{frame}{}
Are groups of amino acids in the best performing reduced alphabet related to amyloidogenicity?
\end{frame}


\begin{frame}{The best-perfoming reduced alphabet}
   <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
# cat(group2df(best_enc, caption = "The best-performing reduced alphabet."))
 @
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Subgroup ID & Amino acids \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
   \end{frame}

     \begin{frame}{The best-perfoming reduced alphabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Subgroup ID & Amino acids \\ 
  \midrule
  1 & G \\ 
   \rowcolor[gray]{0.85}  2 & K, P, R \\ 
   \rowcolor{blue!20} 3 & I, L, V \\ 
   \rowcolor{blue!20}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Group 3 and 4 - hydrophobic amino acids.  
   \end{frame}
  
  
     \begin{frame}{The best-perfoming reduced alphabet}
   \begin{table}[ht]
\centering
\begin{tabular}{rl}
  \toprule
Subgroup ID & Amino acids \\ 
  \midrule
  1 & G \\ 
   \rowcolor{red!20}  2 & K, P, R \\ 
    3 & I, L, V \\ 
   \rowcolor[gray]{0.85}  4 & F, W, Y \\ 
    5 & A, C, H, M \\ 
   \rowcolor[gray]{0.85}  6 & D, E, N, Q, S, T \\ 
   \bottomrule
\end{tabular}
\end{table}
   
Group 2 - charged breakers of $\beta$-structures.  
   
   \end{frame}  
  

\begin{frame}{Alphabet similarity and performance}
Is the best-performing reduced amino alphabet associated with amyloidogenicity?
\end{frame}

\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6.3,warning=FALSE>>=
si_dat <- read.csv2("si_dat.csv")

levels(si_dat[["et"]]) <- c("Best-performing reduced alphabet", 
                            "Reduced alphabet", "Full alphabet", 
                            "Standard reduced alphabet", 
                            "Standard reduced alphabet")


simil_plot <- ggplot(si_dat, aes(x=si, y=AUC_mean)) + 
  # geom_point(data = si_dat, 
  #            aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  #geom_density_2d(color = "black", contour = TRUE) +
    geom_bin2d(bins = 30) +
  # stat_density2d(aes(fill=..level..), color = "black",
  #                contour = TRUE, geom = "polygon", alpha = 0.5, binwidth = 50, bins = 10) +
  scale_fill_continuous("Count", low = "gold", high = "goldenrod4") +
  xlab("Similarity index") +
  ylab("AUC") +
  my_theme +
  geom_point(data = droplevels(filter(si_dat, et != "Reduced alphabet")),
             aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  guides(color = guide_legend(nrow = 1), shape = guide_legend(nrow = 1), 
         fill = guide_colorbar(barwidth = unit(50, "line"))) +
  scale_shape_manual("", values = c(16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "green", "blue"), drop = FALSE) +
  theme(panel.grid.major = element_line(color = "lightgrey", size = 0.5),
        legend.box = "vertical") 

print(simil_plot)
@
Similarity index~\citep{stephenson_unearthing_2013} measures the similarity between two reduced alphabets (1 - identical, 0, totally dissimilar).

The color of a square is proportional to the number of reduced alphabets in its area.
\end{frame}

\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6.3,warning=FALSE>>=
print(simil_plot)
@
The correlation between mean AUC an similarity index is significant ($\textrm{p-value} \leq 2.2^{-16}$; $\rho = 0.51$).
\end{frame}


\begin{frame}{}
Are informative motifs (n-grams) found by QuiPT associated with amyloidogenicity?
\end{frame}


\begin{frame}

Out of 65 the most informative n-grams, 15 (23\%) were also found in the motifs validated experimentally~\citep{lopez_de_la_paz_novo_2002}.

Non-amyloidogenic motifs: 

<<echo = FALSE,message=FALSE,results='asis'>>=
ngram_freq <- read.csv("ngram_freq.csv")

ngram_freq_plot <- mutate(ngram_freq, decoded_name = gsub("_", "-", decoded_name)) %>%
  mutate(decoded_name = factor(decoded_name, levels = as.character(decoded_name)),
         amyloid = diff_freq > 0) %>%
  melt() %>%
  filter(variable %in% c("pos", "neg"),
         association != "Not found") %>%
  droplevels %>%
  mutate(variable = factor(variable, labels = c("Amyloid", "Non-amyloid")))

ngram_freq_text <- select(ngram_freq_plot, decoded_name, association) %>% 
  filter(!duplicated(.))

nice_groups <- sapply(AmyloGram::AmyloGram_model[["enc"]], function(i)
  paste0("\\{\\\\{", paste0(toupper(i), collapse = ", "), "\\\\}\\}")
)

nice_groups <- paste0(paste0("\\\\textcolor{", 
                             c("black", "red", "blue", "black", "purple", "violet"), "}"), 
                      nice_groups)

names(nice_groups) <- 1L:6

readable_ngrams <- gsub("--", "-{}-", gsub("--", "-{}-", as.character(ngram_freq_text[["decoded_name"]])))

for(i in 1L:length(nice_groups)) {
  readable_ngrams <- gsub(pattern = names(nice_groups)[i], 
                          replacement = nice_groups[i], 
                          x = readable_ngrams)
}

# ggplot(ngram_freq_plot, aes(x = decoded_name, y = value)) +
#   geom_bar(aes(fill = variable), position = "dodge", stat = "identity") +
#   geom_point(data = group_by(ngram_freq_plot, decoded_name)  %>% filter(value == max(value)),
#              aes(y = value + 0.004, shape = association), size = 6) +
#   scale_fill_manual("", values = c("gold", "darkmagenta")) +
#   scale_shape_manual("Motif:", breaks = c("Amyloidogenic", "Non-amyloidogenic"), values = c(16, 17, NA)) +
#   scale_y_continuous("Frequency") +
#   scale_x_discrete("") +
#   my_theme +
#   theme(panel.grid.major.y = element_line(color = "lightgrey", size = 0.5)) 

cat(readable_ngrams[ngram_freq_text[["association"]] == "Non-amyloidogenic"],
    sep = "\n\n")
@


\end{frame}

\begin{frame}[allowframebreaks]

Amyloidogenic motifs: 

\Fontvi
<<echo = FALSE,message=FALSE,results='asis'>>=
cat(readable_ngrams[ngram_freq_text[["association"]] != "Non-amyloidogenic"],
    sep = "\n\n")
@


\end{frame}


\section{Benchmark and summary}

\begin{frame}
Is performance of the AmyloGram, the classifier based on the best-performing reduced amino acid alphabet, also adequate on the independent dataset?
\end{frame}


\begin{frame}{Benchmark results}

\begin{table}[ht]
\centering

\begin{tabular}{ccccc}
  \toprule
Classifier & AUC & MCC \\ 
  \midrule
AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
  \rowcolor{white}PASTA 2.0 \citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
   FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
  \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
   \bottomrule
\end{tabular}
\end{table}

The predictor based on the best-performing alphabet, called AmyloGram, was benchmarked against the most popular tools for the detection of amyloid peptides using an external data set \textit{pep424}.

\end{frame}

\begin{frame}{Experimental verification}

We verified experimentally with Fourier transform infrared spectroscopy (FTIR) \textbf{8} non-amyloidogenic peptides from the AmyLoad database that AmyloGram assessed with a high probability of amyloidogenicity.

<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6.4,warning=FALSE>>=
ftir_res <- read.csv("ftir_amylogram_pasta2_literature.csv")

ftir_res_agg <- ftir_res %>% 
  group_by(amyl_db, amyl_ftir) %>% 
  summarise(count = n()) %>% 
  ungroup() %>% 
  mutate(amyl_db = factor(amyl_db, labels = c("Non-amyloid", "Amyloid")),
         amyl_ftir = factor(amyl_ftir, labels = c("Non-amyloid", "Amyloid"))) %>% 
  filter(amyl_db == "Non-amyloid",
         !is.na(amyl_ftir)) %>% 
  mutate(count = ifelse(count == 7, 4, count)) %>% 
  rbind(data.frame(amyl_db = "Non-amyloid", amyl_ftir = "Amyloid", count = 3)) %>% 
  mutate(frac = count/sum(count),
         count_nice = ifelse(count > 2, paste0(count, " peptides"), paste0(count, " peptide")),
         amyl_db = factor(c("Non-amyloid (database)", 
                            "Non-amyloid (database)", 
                            "Amyloid (literature)")))

ggplot(ftir_res_agg, aes(x = amyl_ftir, y = frac, fill = amyl_db,
                         label = count_nice)) +
  geom_bar(stat = "identity") +
  geom_text(position = position_stack(vjust=0.5), color = "white", size = 7) +
  scale_y_continuous("Fraction of peptides") +
  scale_x_discrete("FTIR result") +
  scale_fill_manual("Database and literature", values = c("darkred", "navyblue"),
                    na.value = "gray47") +
  my_theme
@

\end{frame}


\begin{frame}{CsgA in AmyloGram}

CsgA protein (E. coli K12):


<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6.4,warning=FALSE>>=
library(biogram)
library(AmyloGram)
tmp <- strsplit("MKLLKVAAIAAIVFSGSALAGVVPQYGGGGNHGGGGNNSGPNSELNIYQYGGGNSALALQTDARNSDLTITQHGGGNGADVGQGSDDSSIDLTQRGFGNSATLDQWNGKNSEMTVKQFGGGNGAAVDQTASNSSVNVTQVGFGNNATAHQY", "")[[1]]


# ngrams <- seq2ngrams(tmp, 6, u = seqinr::a()[-1]) %>% 
#   decode_ngrams() %>% 
#   strsplit("")
# res <- predict(AmyloGram_model, ngrams)[["Probability"]]
# 
# pos_matrix <- do.call(cbind, get_ngrams_ind(nchar(tmp), 6, 0))
# 
# res_single_residue <- sapply(unique(as.vector(pos_matrix)), function(i)
#   max(res[which(i == pos_matrix, arr.ind = TRUE)[, "row"]])
# )


predict(AmyloGram_model, list(R1 = tmp[43L:65], 
                              R2 = tmp[66L:87],
                              R3 = tmp[88L:110],
                              R4 = tmp[111L:132],
                              R5 = tmp[133L:151])) %>% 
  data.frame() %>% 
  mutate(Amyloidogenic = c("Yes", "No", "Yes", "No", "Yes")) %>% 
  knitr::kable(format = "latex")

@
\end{frame}


\begin{frame}{Summary}

We identified a group of reduced amino acid alphabets which capture properties of amyloids. 

Our algorithm was also capable of extracting n-gram associated with amyloidogenicity, partially confirming experimental results.

Our software is available as a web-server: \url{smorfland.uni.wroc.pl/amylogram}.

n-gram analysis workflow is implemented in the R package \textbf{biogram}: \url{https://cran.r-project.org/package=biogram}.

\end{frame}

\begin{frame}{Acknowledgements and funding}

This research was partially funded by the KNOW Consortium and National Science Center (2015/17/N/NZ2/01845).

\small{
\begin{itemize}
\item Ma\l{}gorzata Kotulska.
\item Pawe\l{} Mackiewicz,
\item Stefan R\"{o}diger,
\item Marlena G\k{a}sior-G\l{}ogowska,
\item \textbf{biogram} package (\url{https://cran.r-project.org/package=biogram}):
\begin{itemize}
\small
\item Piotr Sobczyk,
\item Chris Lauber,
\end{itemize}

\item \textbf{AmyLoad} database (\url{comprec-lin.iiar.pwr.edu.pl/amyload}):
\begin{itemize}
\small
\item Pawe\l{} Wo\'{z}niak.
\end{itemize}
\end{itemize}
}

\end{frame}



\begin{frame}[allowframebreaks]
        \frametitle{References}
  \bibliographystyle{apalike}
  \bibliography{references}
\end{frame}  


\end{document}